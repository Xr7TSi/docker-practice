docker build -t node-app-image .

docker run -d -v %cd%:/app:ro -v /app/node_modules -p 3000:3000 --name node-app node-app-image : 
    node-app is the name of the container.  
    node app image is the name of the image the container is created from.
    -p 3000-3000 number on left is incoming traffic from outside world, number on right traffic going to the container.
    -v /app/node_modules prevents node_modules from changed in the container.
    -v %cd%:/app:ro  Binds localhost current directory to the app.  
        Allows nodemon live changes to the running container. (must run from cmd prompt)
        :ro makes the container read only.  Only local host can write to the container. 
    

docker ps : show running containers

docker container ls : show all containers

docker rm node-app -f : remove container and force shutdown
    -fv deletes related volume when deleting a container

docker exec -it node-app bash  :  Access file system inside container
    printenv : print environment variables

docker volume prune : remove unused volumes

docker-compose up -d : run docker-compose up -d

docker-compose up -d --build : run docker-compose up -d --build

docker-compose down -v : run docker-compose down with delete volumes

docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d 

docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d 









FLAGS

-d : detached mode.  Allows continued use of command line.
-v : volume mode.  Creates a volume between the host and the container.
--name : provides name of the container




https://www.youtube.com/watch?v=9zUHg7xjIqQ&t=552s